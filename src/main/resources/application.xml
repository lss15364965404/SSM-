<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xmlns:tx="http://www.springframework.org/schema/tx"  xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">  
      
      
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
         class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
         <property name="location" value="classpath:jdbc.properties" />  
    </bean>  
    
    
   <!-- 配置数据源：此处要注意使用数据库连接池引入的类一定要属于导入的jar包，另外每个连接池的参数也有可能不一样 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  
         destroy-method="close">  
         <property name="driverClassName" value="${datasource.driverClassName}" />  
         <property name="url" value="${datasource.url}" />  
         <property name="username" value="${datasource.username}" />  
         <property name="password" value="${datasource.password}" />  
         <!-- 初始化连接大小 -->  
         <!--  <property name="initialSize" value="${datasource.initialSize}"></property>  
         --><!-- 连接池最大数量   -->
         <property name="maxActive" value="${datasource.maxActive}"></property>  
         <!-- 连接池最大空闲   -->
         <property name="maxIdle" value="${datasource.maxIdle}"></property>  
         <!-- 连接池最小空闲   -->
         <!-- <property name="minIdle"><value>1</value></property>  
          获取连接最大等待时间  
         <property name="maxWait" value="${datasource.maxWait}"></property>  --> 
     </bean> 
   
   
     <!-- spring和MyBatis整合 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
         <property name="dataSource" ref="dataSource" />  
         <!--mybatis的配置文件 ，在此文件中，可以为每个类配置别名，这样在mapper.xml文件中，写resultType时就不需要写类的全路径了-->  
         <!-- <property name="configLocation" value="classpath:mybatis-config.xml" /> -->
         <!-- 自动扫描mapping.xml文件 -->  
         <property name="mapperLocations" value="classpath:com/lss/mapping/*.xml"></property>  
     </bean>  
   
   
     <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
         <property name="basePackage" value="com.lss.dao" />  
         <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
     </bean>  
   
   
     <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
     <bean id="transactionManager"  
         class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
         <property name="dataSource" ref="dataSource" />  
     </bean>  
   <!--开启事务注解扫描-->  
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>  
</beans>